import pandas as pd
import pydoc
import nltk
import pyodbc
from nltk.sentiment.vader import SentimentIntensityAnalyzer
nltk.download('vader_lexicon')
pd.set_option('display.max_columns',None)
pd.set_option('display.width',None)
def fetch_data_from_sql():


    conn_str=(
        "Driver={Sql Server};"
        "Server=DESKTOP-IVS4VHQ\\SQLEXPRESS;"
        "Database=PortfolioProject_MarketingAnalytics;"
        "Trusted_Connection=yes;"

    )

    conn=pyodbc.connect(conn_str)
    query="select ReviewID,CustomerID,ProductID,ReviewDate,Rating,ReviewText from customer_reviews"
    df=pd.read_sql(query,conn)
    conn.close()
    return df

customer_review_df=fetch_data_from_sql()
sia=SentimentIntensityAnalyzer()

def calculate_sentiment(review):
    sentiment_dict=sia.polarity_scores(review)
    return sentiment_dict['compound']

def catogorize_sentiments(score,rating):
    if score>0.05:
        if rating>=4:
            return "Positive"
        elif rating==3:
            return "Mixed Positive"
        else:
            return "Mixed Negative"
    elif score<-0.05:
        if rating<=2:
            return "Negative"
        elif rating==3:
            return "Mixed Negative"
        else:
            return "Mixed Positive"
    else:
        if rating>=4:
            return "Positive"
        elif rating<=2:
            return "Negative"
        else:
            return "Neutral"

def sentiment_bucket(score):
    if score>=0.05:
        return "0.5 to 1.0"
    elif 0.0<=score<0.05:
        return "0.0 to 0.49"
    elif -0.5<=score<0.0:
        return "-0.49 to 0.0"
    else:
        return "-1.0 to -0.5"

customer_review_df["SentimentScore"]=customer_review_df.apply(lambda x:calculate_sentiment(x["ReviewText"]),axis=1)
customer_review_df["SentimentCategory"]=customer_review_df.apply(lambda x:catogorize_sentiments(x["SentimentScore"],x["Rating"]),axis=1)
customer_review_df["SentimentsBuckets"]=customer_review_df.apply(lambda x:sentiment_bucket(x["SentimentScore"]),axis=1)
customer_review_df.to_csv("D:\\pandas_file\\customer_review_sentiment_analysis.csv",index=False)
print(customer_review_df.head())
